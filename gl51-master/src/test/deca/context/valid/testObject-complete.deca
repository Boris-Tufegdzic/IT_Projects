//Description
//Test avec plein de fonctionnalitees
//Verif que c'est bien ecrit en deca deja grace Ã  la grammaire


class Entity {
    //position of entity
    float x = 0;
    float y = 0;
    float z = 0;
    protected string entityTag = "entityTag";

    void setCoordinate(float x, float y, float z) {
        this.x = x;
        this.y = y;
        this.z = z;
    }

    void shout(string msg){
        println("The entity shout: ", msg);
    }

    void toString(){
        println("--------toString Entity ------------");
        println(entityTag);
        println("------------------------------");
    }
}

class Player extends Entity{
    string name;
    float coin;
    boolean isVip = false;

    //setter
    void setName(string name) {
        this.name = name;
    }

    void setCoin(float coin) {
        this.coin = coin;
    }

    void setVip(boolean b) {
        this.isVip = b;
    }

    //getter
    string getName() {
        return this.name;
    }

    float getCoins(){
        return this.coin;
    }

    boolean getIsVip(){
        return this.isVip;
    }

    void increaseCoin(float coin) {
        this.coin = this.coin + coin;
    }

    //Override shout
    void shout(string msg) {
        println("The player shout: ", msg);
    }

    //Override toString
    void toString() {
        println("-----toString Player --------");
        println(entityTag); //entityTag accessible because protected, super optionnel ? en java oui
        println(getName());
        println(getCoins());
        println("------------------------------");

    }
}

class Monster extends Entity {

    //Override shout
    void shout(string msg) {
        println("The Monster shout: ", msg);
    }

    //Override toString
    void toString() {
        println("----- toString Monster --------");
        println(entityTag);
        println("-----------------------------");
    }
}

//main
{
    //init class
    Entity entity = new Entity();
    Player player = new Player();
    Entity monster = new Monster();
    Monster munch;
    println("init classes ...");
    println("init classes done !");

    println("yo");
    println("ca farte?");

    //appel method
    println("setCoordinate ...");
    entity.setCoordinate(1.0f, 1.0f, 1.0f);
    player.setCoordinate(2.0f, 2.0f, 2.0f);
    monster.setCoordinate(3.0f, 3.0f, 3.0f);
    println("setCoordinate done !");

    //appel method redefinies
    println("Shout ...");
    entity.shout("Wanheda the commander of death !");
    player.shout("Wanheda the commander of death !");
    monster.shout("Wanheda the commander of death !");
    println("Shout done !");


    println("Configure Player...");
    player.setName("Bellamy Blake");
    player.setCoin(200.0f);
    player.increaseCoin(20.0f);
    player.setVip(true);
    println("Configure Player done !");
    println("Call player to String ...");
    player.toString();

    println("test instanceof de monster ...");
    if(monster instanceof Monster) { //true
        munch = (Monster) (monster); //Cast
        munch.shout("msg");
        println("monster instance of Monster");
    } else {
        println("instanceof not working");
    }

    println("test while: increase player coin till 400.0f...");
    while(player.getCoins() <= 400.0f) {
        player.increaseCoin(20.0f);
    }
    println("test while done !");

    println("Test complete finished ! Ciao");
}